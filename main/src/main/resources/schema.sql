DROP TABLE IF EXISTS
    events,
    requests,
    compilations,
    comments,
    compilation_events,
    event_views,
    users,
    locations,
    categories;

CREATE TABLE IF NOT EXISTS users
(
    id    bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT                                   NOT NULL,
    lon FLOAT                                   NOT NULL,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) UNIQUE                     NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id),
    CONSTRAINT uq_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 bigint GENERATED BY DEFAULT AS IDENTITY             NOT NULL,
    annotation         VARCHAR(2048)                                       NOT NULL,
    category_id        bigint REFERENCES categories (id) ON DELETE CASCADE NOT NULL,
    confirmed_requests integer                                             NOT NULL,
    created_on         TimeStamp WITHOUT TIME ZONE                         NOT NULL,
    description        VARCHAR(7000)                                       NOT NULL,
    event_date         TimeStamp WITHOUT TIME ZONE                         NOT NULL,
    initiator_id       bigint REFERENCES users (id) ON DELETE CASCADE      NOT NULL,
    location_id        bigint REFERENCES locations (id) ON DELETE CASCADE  NOT NULL,
    paid               boolean                                             NOT NULL,
    participant_limit  integer                                             NOT NULL,
    published_on       TimeStamp WITHOUT TIME ZONE                         NOT NULL,
    request_moderation boolean                                             NOT NULL,
    title              VARCHAR(1024)                                       NOT NULL,
    state              VARCHAR(50)                                         NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           bigint GENERATED BY DEFAULT AS IDENTITY         NOT NULL,
    created      TimeStamp WITHOUT TIME ZONE                     NOT NULL,
    event_id     bigint REFERENCES events (id) ON DELETE CASCADE NOT NULL,
    requester_id bigint REFERENCES users (id) ON DELETE CASCADE  NOT NULL,
    status       VARCHAR(255)                                    NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN                                 NOT NULL,
    title  VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    visible         BOOLEAN                                 NOT NULL,
    event_id        BIGINT                                  NOT NULL,
    user_id         BIGINT                                  NOT NULL,
    text            VARCHAR(3000)                           NOT NULL,
    publication_date TimeStamp WITHOUT TIME ZONE             NOT NULL,
    modify_date      TimeStamp WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES events (id)
);

CREATE TABLE IF NOT EXISTS event_views
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id BIGINT                                  NOT NULL,
    view_ip  VARCHAR(20) UNIQUE                      NOT NULL,
    CONSTRAINT fk_event_view FOREIGN KEY (event_id) REFERENCES events (id)
);




